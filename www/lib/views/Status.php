<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace views;

use \php\Boot;
use \tink\core\TypedError;
use \php\_Boot\HxEnum;

class Status extends HxEnum {
	/**
	 * @return Status
	 */
	static public function Cool () {
		static $inst = null;
		if (!$inst) $inst = new Status('Cool', 1, []);
		return $inst;
	}


	/**
	 * @return Status
	 */
	static public function Nib () {
		static $inst = null;
		if (!$inst) $inst = new Status('Nib', 0, []);
		return $inst;
	}


	/**
	 * @param TypedError $er
	 * 
	 * @return Status
	 */
	static public function PasCool ($er) {
		return new Status('PasCool', 2, [$er]);
	}


	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			1 => 'Cool',
			0 => 'Nib',
			2 => 'PasCool',
		];
	}


	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Cool' => 0,
			'Nib' => 0,
			'PasCool' => 1,
		];
	}
}


Boot::registerClass(Status::class, 'views.Status');
