<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace views;

use \php\Boot;
use \tink\template\_Html\HtmlBuffer_Impl_;
use \tink\template\_Html\Html_Impl_;
use \views\__impl\Head as __implHead;

class Layout {
	/**
	 * @var string
	 */
	static public $footer;
	/**
	 * @var string
	 */
	static public $head;
	/**
	 * @var string
	 */
	static public $header;
	/**
	 * @var string
	 */
	static public $id;
	/**
	 * @var string
	 */
	static public $menu;
	/**
	 * @var \Array_hx
	 */
	static public $scripts;
	/**
	 * @var string
	 */
	static public $viewContent;


	/**
	 * @return void
	 */
	static public function init () {
		#src/views/Layout.hx:29: characters 9-40
		Layout::$head = __implHead::render(Layout::$scripts);
	}


	/**
	 * @return string
	 */
	static public function render () {
		#src//views/layout.tt:1: character 1
		$ret = Html_Impl_::buffer();
		#src//views/layout.tt:1: character 1
		$ret->arr[$ret->length] = "<!DOCTYPE html>\x0A<html lang=\"en\">\x0A    ";
		#src//views/layout.tt:1: character 1
		++$ret->length;

		#src//views/layout.tt:1: characters 40-44
		$ret->arr[$ret->length] = Layout::$head;
		#src//views/layout.tt:1: characters 40-44
		++$ret->length;

		#src//views/layout.tt:1: characters 40-46
		$ret->arr[$ret->length] = "\x0A<body>\x0A<div class=\"maincontainer\" id=\"";
		#src//views/layout.tt:1: characters 40-46
		++$ret->length;

		#src//views/layout.tt:1: characters 87-89
		$b = Html_Impl_::escape(Layout::$id);
		#src//views/layout.tt:1: characters 87-89
		$ret->arr[$ret->length] = $b;
		#src//views/layout.tt:1: characters 87-89
		++$ret->length;

		#src//views/layout.tt:1: characters 87-91
		$ret->arr[$ret->length] = "\">\x0A    \x0A    <div class=\"container\">\x0A        ";
		#src//views/layout.tt:1: characters 87-91
		++$ret->length;

		#src//views/layout.tt:1: characters 137-143
		$ret->arr[$ret->length] = Layout::$header;
		#src//views/layout.tt:1: characters 137-143
		++$ret->length;

		#src//views/layout.tt:1: characters 137-145
		$ret->arr[$ret->length] = "\x0A        ";
		#src//views/layout.tt:1: characters 137-145
		++$ret->length;

		#src//views/layout.tt:1: characters 156-160
		$ret->arr[$ret->length] = Layout::$menu;
		#src//views/layout.tt:1: characters 156-160
		++$ret->length;

		#src//views/layout.tt:1: characters 156-162
		$ret->arr[$ret->length] = "\x0A        ";
		#src//views/layout.tt:1: characters 156-162
		++$ret->length;

		#src//views/layout.tt:1: characters 174-185
		$ret->arr[$ret->length] = Layout::$viewContent;
		#src//views/layout.tt:1: characters 174-185
		++$ret->length;

		#src//views/layout.tt:1: characters 174-188
		$ret->arr[$ret->length] = "\x0A        ";
		#src//views/layout.tt:1: characters 174-188
		++$ret->length;

		#src//views/layout.tt:1: characters 200-206
		$ret->arr[$ret->length] = Layout::$footer;
		#src//views/layout.tt:1: characters 200-206
		++$ret->length;

		#src//views/layout.tt:1: characters 200-209
		$ret->arr[$ret->length] = "\x0A    </div>\x0A</div>\x0A</body>\x0A</html>";
		#src//views/layout.tt:1: characters 200-209
		++$ret->length;


		#/Users/ut/haxe/haxe_libraries/tink_template/0.3.3/github/947e330e7f57a4877b12c253baac6311cfb5530b/src/tink/template/Generator.hx:121: characters 19-30
		return HtmlBuffer_Impl_::collapse($ret);
	}


	/**
	 * @param string $v
	 * @param string $contentid
	 * 
	 * @return string
	 */
	static public function withLayout ($v, $contentid = "layout") {
		#src/views/Layout.hx:15: lines 15-20
		if ($contentid === null) {
			#src/views/Layout.hx:15: lines 15-20
			$contentid = "layout";
		}
		#src/views/Layout.hx:16: characters 9-15
		Layout::init();
		#src/views/Layout.hx:17: characters 9-22
		Layout::$viewContent = $v;
		#src/views/Layout.hx:18: characters 9-21
		Layout::$id = $contentid;
		#src/views/Layout.hx:19: characters 9-24
		return Layout::render();
	}


	/**
	 * @param string $script
	 * 
	 * @return void
	 */
	public function addScript ($script) {
		#src/views/Layout.hx:24: lines 24-25
		if (!\Lambda::has(Layout::$scripts, $script)) {
			#src/views/Layout.hx:25: characters 13-33
			$_this = Layout::$scripts;
			#src/views/Layout.hx:25: characters 13-33
			$_this->arr[$_this->length] = $script;
			#src/views/Layout.hx:25: characters 13-33
			++$_this->length;
		}
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$scripts = new \Array_hx();
	}
}


Boot::registerClass(Layout::class, 'views.Layout');
Layout::__hx__init();
