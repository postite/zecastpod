<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\core\_Callback;

use \php\_Boot\HxClosure;
use \php\Boot;

final class CallbackLink_Impl_ {
	/**
	 * @param \Closure $link
	 * 
	 * @return LinkObject
	 */
	static public function _new ($link) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:61: character 10
		return new SimpleLink($link);
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return void
	 */
	static public function cancel ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:65: characters 5-36
		if ($this1 !== null) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:65: characters 23-36
			$this1->cancel();
		}
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return void
	 */
	static public function dissolve ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:69: characters 5-13
		if ($this1 !== null) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:69: characters 5-13
			$this1->cancel();
		}
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return LinkObject
	 */
	static public function fromFunction ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:80: characters 12-31
		return new SimpleLink($f);
	}


	/**
	 * @param \Array_hx $callbacks
	 * 
	 * @return LinkObject
	 */
	static public function fromMany ($callbacks) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:86: characters 12-71
		return new SimpleLink(function ()  use (&$callbacks) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:86: characters 37-70
			$_g = 0;
			#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:86: characters 37-70
			while ($_g < $callbacks->length) {
				#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:86: characters 42-44
				$cb = ($callbacks->arr[$_g] ?? null);
				#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:86: characters 37-70
				$_g = $_g + 1;
				#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:86: characters 59-70
				if ($cb !== null) {
					#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:86: characters 59-70
					$cb->cancel();
				}
			}
		});
	}


	/**
	 * @param LinkObject $a
	 * @param LinkObject $b
	 * 
	 * @return LinkObject
	 */
	static public function join ($a, $b) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:83: characters 5-30
		return new LinkPair($a, $b);
	}


	/**
	 * @return void
	 */
	static public function noop () {
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return \Closure
	 */
	static public function toCallback ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:77: characters 5-38
		return function ($_)  use (&$this1) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:77: characters 25-38
			$this1->cancel();
		};
	}


	/**
	 * @param LinkObject $this
	 * 
	 * @return \Closure
	 */
	static public function toFunction ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:74: characters 12-51
		if ($this1 === null) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:74: characters 30-34
			return new HxClosure(CallbackLink_Impl_::class, 'noop');
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Callback.hx:74: characters 40-51
			return new HxClosure($this1, 'cancel');
		}
	}
}


Boot::registerClass(CallbackLink_Impl_::class, 'tink.core._Callback.CallbackLink_Impl_');
