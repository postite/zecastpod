<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\core\_Pair;

use \php\Boot;
use \tink\core\MPair;

final class Pair_Impl_ {


	/**
	 * @param mixed $a
	 * @param mixed $b
	 * 
	 * @return MPair
	 */
	static public function _new ($a, $b) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Pair.hx:8: character 17
		return new MPair($a, $b);
	}


	/**
	 * @param MPair $this
	 * 
	 * @return mixed
	 */
	static public function get_a ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Pair.hx:10: characters 29-42
		return $this1->a;
	}


	/**
	 * @param MPair $this
	 * 
	 * @return mixed
	 */
	static public function get_b ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Pair.hx:11: characters 29-42
		return $this1->b;
	}


	/**
	 * @param MPair $this
	 * 
	 * @return bool
	 */
	static public function isNil ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Pair.hx:17: characters 5-24
		return $this1 === null;
	}


	/**
	 * @return MPair
	 */
	static public function nil () {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Pair.hx:20: characters 5-16
		return null;
	}


	/**
	 * @param MPair $this
	 * 
	 * @return bool
	 */
	static public function toBool ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.18.0/haxelib/src/tink/core/Pair.hx:14: characters 5-24
		return $this1 !== null;
	}
}


Boot::registerClass(Pair_Impl_::class, 'tink.core._Pair.Pair_Impl_');
Boot::registerGetters('tink\\core\\_Pair\\Pair_Impl_', [
	'b' => true,
	'a' => true
]);
