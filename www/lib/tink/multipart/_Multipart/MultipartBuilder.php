<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\multipart\_Multipart;

use \php\Boot;
use \haxe\io\Bytes;
use \tink\streams\StreamObject;
use \tink\_Chunk\Chunk_Impl_;
use \haxe\io\_BytesData\Container;
use \tink\io\_Source\Source_Impl_;
use \tink\core\NamedWith;

class MultipartBuilder {
	/**
	 * @var string
	 */
	static public $ALPHABETS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";


	/**
	 * @var string
	 */
	public $boundary;
	/**
	 * @var \Array_hx
	 */
	public $chunks;


	/**
	 * @param string $boundary
	 * 
	 * @return void
	 */
	public function __construct ($boundary = null) {
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:42: lines 42-49
		$tmp = null;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:42: lines 42-49
		if ($boundary === null) {
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:44: characters 5-31
			$buf = new \StringBuf();
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:45: characters 5-36
			$buf->add("--------------------");
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 5-85
			$_g = 0;
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 5-85
			while ($_g < 20) {
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 5-85
				$_g = $_g + 1;
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 34-84
				$_this = MultipartBuilder::$ALPHABETS;
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 55-83
				$x = strlen(MultipartBuilder::$ALPHABETS);
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 34-84
				$index = ($x <= 1 ? 0 : mt_rand(0, $x - 1));
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 22-85
				$c = (($index < 0) || ($index >= strlen($_this)) ? null : ord($_this[$index]));
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:46: characters 22-85
				$buf->b = ($buf->b??'null') . (chr($c)??'null');

			}

			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:42: lines 42-49
			$tmp = $buf->b;
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:42: lines 42-49
			$tmp = $boundary;
		}
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:42: lines 42-49
		$this->boundary = $tmp;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:50: characters 3-14
		$this->chunks = new \Array_hx();
	}


	/**
	 * @param string $name
	 * @param string $filename
	 * @param string $mimeType
	 * @param StreamObject $content
	 * 
	 * @return void
	 */
	public function addFile ($name, $filename, $mimeType, $content) {
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:58: characters 3-66
		$_this = $this->chunks;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:58: characters 3-66
		$_this->arr[$_this->length] = new NamedWith($name, ChunkType::File($filename, $mimeType, $content));
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:58: characters 3-66
		++$_this->length;
	}


	/**
	 * @param string $name
	 * @param string $value
	 * 
	 * @return void
	 */
	public function addValue ($name, $value) {
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:54: characters 3-45
		$_this = $this->chunks;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:54: characters 3-45
		$_this->arr[$_this->length] = new NamedWith($name, ChunkType::Value($value));
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:54: characters 3-45
		++$_this->length;
	}


	/**
	 * @return StreamObject
	 */
	public function toIdealSource () {
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:62: characters 3-27
		$body = Source_Impl_::$EMPTY;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:63: lines 63-74
		$_g = 0;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:63: lines 63-74
		$_g1 = $this->chunks;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:63: lines 63-74
		while ($_g < $_g1->length) {
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:63: characters 7-12
			$chunk = ($_g1->arr[$_g] ?? null);
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:63: lines 63-74
			$_g = $_g + 1;
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:64: characters 24-37
			$s = "--" . ($this->boundary??'null') . "\x0D\x0A";
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:64: characters 11-41
			$body = $body->append(Source_Impl_::ofChunk(Chunk_Impl_::ofBytes(new Bytes(strlen($s), new Container($s)))));
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:65: characters 11-22
			$_g2 = $chunk->value;
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:65: characters 11-22
			switch ($_g2->index) {
				case 0:
					#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:67: characters 26-84
					$s1 = "Content-Disposition: form-data; name=\"" . ($chunk->name??'null') . "\"\x0D\x0A\x0D\x0A" . ($_g2->params[0]??'null');
					#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:67: characters 13-90
					$body = $body->append(Source_Impl_::ofChunk(Chunk_Impl_::ofBytes(new Bytes(strlen($s1), new Container($s1)))));
					break;
				case 1:
					#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:70: characters 16-115
					$s2 = "Content-Disposition: form-data; name=\"" . ($chunk->name??'null') . "\"; filename=\"" . ($_g2->params[0]??'null') . "\"\x0D\x0AContent-Type: " . ($_g2->params[1]??'null') . "\x0D\x0A\x0D\x0A";
					#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:69: lines 69-71
					$body = $body->append(Source_Impl_::ofChunk(Chunk_Impl_::ofBytes(new Bytes(strlen($s2), new Container($s2)))))->append($_g2->params[2]);
					break;
			}

			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:73: characters 11-30
			$body = $body->append(Source_Impl_::ofChunk(Chunk_Impl_::ofBytes(new Bytes(strlen("\x0D\x0A"), new Container("\x0D\x0A")))));
		}

		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:75: characters 23-36
		$s3 = "--" . ($this->boundary??'null') . "--";
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:75: characters 10-38
		$body = $body->append(Source_Impl_::ofChunk(Chunk_Impl_::ofBytes(new Bytes(strlen($s3), new Container($s3)))));
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:76: characters 3-14
		return $body;
	}
}


Boot::registerClass(MultipartBuilder::class, 'tink.multipart._Multipart.MultipartBuilder');
