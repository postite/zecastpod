<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\multipart\_Multipart;

use \php\Boot;
use \tink\core\MPair;
use \tink\http\IncomingRequest;
use \tink\streams\StreamObject;
use \haxe\ds\Option;

final class Multipart_Impl_ {
	/**
	 * @param string $boundary
	 * 
	 * @return MultipartBuilder
	 */
	static public function _new ($boundary = null) {
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:21: character 16
		return new MultipartBuilder($boundary);
	}


	/**
	 * @param IncomingRequest $r
	 * 
	 * @return Option
	 */
	static public function check ($r) {
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:13: characters 26-48
		$_g = $r->header->contentType();
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:13: characters 18-24
		$_g1 = $r->body;
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:13: characters 18-24
		if ($_g1->index === 0) {
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:13: characters 26-48
			if ($_g->index === 0) {
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:14: characters 30-41
				$contentType = $_g->params[0];
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:14: lines 14-17
				if ($contentType->type === "multipart") {
					#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:15: characters 5-37
					return Option::Some(new MPair($contentType, $_g1->params[0]));
				} else {
					#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:17: characters 5-9
					return Option::None();
				}
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:17: characters 5-9
				return Option::None();
			}
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:17: characters 5-9
			return Option::None();
		}
	}


	/**
	 * @param MultipartBuilder $this
	 * 
	 * @return StreamObject
	 */
	static public function toIdealSource ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_multipart/0.3.0/haxelib/src/tink/multipart/Multipart.hx:26: characters 3-30
		return $this1->toIdealSource();
	}
}


Boot::registerClass(Multipart_Impl_::class, 'tink.multipart._Multipart.Multipart_Impl_');
