<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\template\_Html;

use \php\Boot;

final class HtmlBuffer_Impl_ {
	/**
	 * @return \Array_hx
	 */
	static public function _new () {
		#/Users/ut/haxe/haxe_libraries/tink_template/0.3.3/github/947e330e7f57a4877b12c253baac6311cfb5530b/src/tink/template/Html.hx:63: character 17
		return new \Array_hx();
	}


	/**
	 * @param \Array_hx $this
	 * @param string $b
	 * 
	 * @return void
	 */
	static public function add ($this1, $b) {
		#/Users/ut/haxe/haxe_libraries/tink_template/0.3.3/github/947e330e7f57a4877b12c253baac6311cfb5530b/src/tink/template/Html.hx:72: characters 5-17
		$this1->arr[$this1->length] = $b;
		#/Users/ut/haxe/haxe_libraries/tink_template/0.3.3/github/947e330e7f57a4877b12c253baac6311cfb5530b/src/tink/template/Html.hx:72: characters 5-17
		++$this1->length;
	}


	/**
	 * @param \Array_hx $this
	 * 
	 * @return string
	 */
	static public function collapse ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_template/0.3.3/github/947e330e7f57a4877b12c253baac6311cfb5530b/src/tink/template/Html.hx:66: characters 5-16
		return Html_Impl_::ofMultiple($this1);
	}


	/**
	 * @param \Array_hx $this
	 * 
	 * @return string
	 */
	static public function toString ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_template/0.3.3/github/947e330e7f57a4877b12c253baac6311cfb5530b/src/tink/template/Html.hx:69: characters 5-25
		return $this1->join("");
	}
}


Boot::registerClass(HtmlBuffer_Impl_::class, 'tink.template._Html.HtmlBuffer_Impl_');
