<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\http\middleware;

use \haxe\io\Path;
use \tink\core\_Promise\Promise_Impl_;
use \php\_Boot\HxClosure;
use \tink\http\_Header\HeaderValue_Impl_;
use \tink\core\Outcome;
use \tink\http\Header;
use \tink\http\ResponseHeaderBase;
use \tink\http\HeaderField;
use \tink\http\_Response\OutgoingResponseData;
use \php\Boot;
use \tink\core\TypedError;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\io\RealSourceTools;
use \php\_Boot\HxString;
use \tink\core\_Future\Future_Impl_;
use \mime\Mime;
use \tink\http\IncomingRequest;
use \tink\streams\StreamObject;
use \tink\http\HandlerObject;
use \tink\http\_Header\HeaderName_Impl_;
use \asys\io\File;
use \tink\io\_Source\Source_Impl_;
use \tink\core\_Lazy\LazyConst;
use \asys\FileSystem;
use \php\_Boot\HxAnon;

class StaticHandler implements HandlerObject {
	/**
	 * @var HandlerObject
	 */
	public $handler;
	/**
	 * @var TypedError
	 */
	public $notFound;
	/**
	 * @var object
	 */
	public $options;
	/**
	 * @var string
	 */
	public $prefix;
	/**
	 * @var string
	 */
	public $root;


	/**
	 * @param string $root
	 * @param string $prefix
	 * @param object $options
	 * @param HandlerObject $handler
	 * 
	 * @return void
	 */
	public function __construct ($root, $prefix, $options, $handler) {
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:62: characters 3-19
		$this->root = $root;
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:63: characters 3-23
		$this->prefix = $prefix;
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:64: characters 3-25
		$this->options = $options;
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:65: characters 3-25
		$this->handler = $handler;
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:66: characters 3-51
		$this->notFound = new TypedError(404, "File Not Found", new HxAnon([
			"fileName" => "tink/http/middleware/Static.hx",
			"lineNumber" => 66,
			"className" => "tink.http.middleware.StaticHandler",
			"methodName" => "new",
		]));
	}


	/**
	 * @param Header $header
	 * @param object $stat
	 * @param StreamObject $source
	 * @param string $contentType
	 * @param string $filename
	 * 
	 * @return OutgoingResponseData
	 */
	public function partial ($header, $stat, $source, $contentType, $filename) {
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:101: characters 4-45
		$headers = new HeaderField(HeaderName_Impl_::ofString("Accept-Ranges"), "bytes");
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:102: characters 4-46
		$headers1 = new HeaderField(HeaderName_Impl_::ofString("Vary"), "Accept-Encoding");
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:103: characters 21-34
		$headers2 = HeaderName_Impl_::ofString("Last-Modified");
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:105: characters 21-40
		$headers3 = HeaderName_Impl_::ofString("Content-Disposition");
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:100: lines 100-106
		$headers4 = \Array_hx::wrap([
			$headers,
			$headers1,
			new HeaderField($headers2, HeaderValue_Impl_::ofDate($stat->mtime)),
			new HeaderField(HeaderName_Impl_::ofString("Content-Type"), $contentType),
			new HeaderField($headers3, "inline; filename=\"" . ($filename??'null') . "\""),
		]);
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:108: lines 108-111
		if (($this->options !== null) && ($this->options->expiry !== null)) {
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:109: characters 34-41
			$x = HeaderName_Impl_::ofString("Expires");
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:109: characters 4-85
			$x1 = new HeaderField($x, HeaderValue_Impl_::ofDate(\Date::fromTime(\Date::now()->getTime() + $this->options->expiry * 1000)));
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:109: characters 4-85
			$headers4->arr[$headers4->length] = $x1;
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:109: characters 4-85
			++$headers4->length;

			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:110: characters 4-79
			$headers4->arr[$headers4->length] = new HeaderField(HeaderName_Impl_::ofString("Cache-Control"), "max-age=" . ($this->options->expiry??'null'));
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:110: characters 4-79
			++$headers4->length;

		}
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:114: characters 10-32
		$_g = $header->byName(HeaderName_Impl_::ofString("range"));
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:114: characters 10-32
		switch ($_g->index) {
			case 0:
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:116: characters 12-33
				$_g1 = \Array_hx::wrap(explode("=", $_g->params[0]));
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:116: characters 12-33
				if ($_g1->length === 2) {
					#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:116: characters 12-33
					if (($_g1->arr[0] ?? null) === "bytes") {
						#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:118: lines 118-126
						$res = function ($pos, $len)  use (&$source, &$stat, &$headers4) {
							#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:121: characters 10-86
							$fields = new HeaderField(HeaderName_Impl_::ofString("Content-Range"), "bytes " . ($pos??'null') . "-" . (($pos + $len - 1)??'null') . "/" . ($stat->size??'null'));
							#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:122: characters 27-41
							$fields1 = HeaderName_Impl_::ofString("Content-Length");
							#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:120: lines 120-123
							$this1 = new ResponseHeaderBase(206, "Partial Content", $headers4->concat(\Array_hx::wrap([
								$fields,
								new HeaderField($fields1, HeaderValue_Impl_::ofInt($len)),
							])), "HTTP/1.1");
							#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:119: lines 119-125
							return new OutgoingResponseData($this1, Source_Impl_::limit(Source_Impl_::skip($source, $pos), $len));
						};
						#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:128: characters 14-30
						$_g2 = \Array_hx::wrap(explode("-", ($_g1->arr[1] ?? null)));
						#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:128: characters 14-30
						if ($_g2->length === 2) {
							#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:131: characters 14-29
							$_hx_tmp = null;
							#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:133: characters 14-29
							$_hx_tmp1 = null;
							#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:128: characters 14-30
							if (($_g2->arr[0] ?? null) === "") {
								#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:131: characters 14-29
								$_hx_tmp = \Std::parseInt(($_g2->arr[0] ?? null));
								#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:129: lines 129-130
								if ($_hx_tmp === null) {
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:133: characters 14-29
									$_hx_tmp1 = \Std::parseInt(($_g2->arr[0] ?? null));
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:129: lines 129-130
									if ($_hx_tmp1 === null) {
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:129: characters 18-33
										$_hx_tmp2 = \Std::parseInt(($_g2->arr[1] ?? null));
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:130: characters 9-41
										return $res($stat->size - $_hx_tmp2, $_hx_tmp2);
									} else {
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:129: characters 18-33
										$_hx_tmp3 = \Std::parseInt(($_g2->arr[1] ?? null));
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:130: characters 9-41
										return $res($stat->size - $_hx_tmp3, $_hx_tmp3);
									}
								} else {
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:133: characters 14-29
									$_hx_tmp1 = \Std::parseInt(($_g2->arr[0] ?? null));
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:129: lines 129-130
									if ($_hx_tmp1 === null) {
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:129: characters 18-33
										$_hx_tmp4 = \Std::parseInt(($_g2->arr[1] ?? null));
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:130: characters 9-41
										return $res($stat->size - $_hx_tmp4, $_hx_tmp4);
									} else {
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:129: characters 18-33
										$_hx_tmp5 = \Std::parseInt(($_g2->arr[1] ?? null));
										#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:130: characters 9-41
										return $res($stat->size - $_hx_tmp5, $_hx_tmp5);
									}
								}
							} else {
								#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:133: characters 38-53
								$_hx_tmp6 = null;
								#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:128: characters 14-30
								if (($_g2->arr[1] ?? null) === "") {
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:131: characters 14-29
									$_hx_tmp = \Std::parseInt(($_g2->arr[0] ?? null));
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:131: characters 33-36
									$pos1 = $_hx_tmp;
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:132: characters 9-41
									return $res($pos1, $stat->size - $pos1);
								} else {
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:133: characters 14-29
									$_hx_tmp1 = \Std::parseInt(($_g2->arr[0] ?? null));
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:133: characters 33-36
									$pos2 = $_hx_tmp1;
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:133: characters 38-53
									$_hx_tmp6 = \Std::parseInt(($_g2->arr[1] ?? null));
									#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:134: characters 9-39
									return $res($pos2, $_hx_tmp6 - $pos2 + 1);
								}
							}
						}

					}
				}
				break;
			case 1:
								break;
		}

		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:144: characters 22-36
		$fields2 = HeaderName_Impl_::ofString("Content-Length");
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:143: lines 143-145
		$this2 = new ResponseHeaderBase(200, "OK", $headers4->concat(\Array_hx::wrap([new HeaderField($fields2, HeaderValue_Impl_::ofInt($stat->size))])), "HTTP/1.1");
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:142: lines 142-147
		return new OutgoingResponseData($this2, $source);
	}


	/**
	 * @param IncomingRequest $req
	 * 
	 * @return FutureObject
	 */
	public function process ($req) {
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:69: lines 69-96
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:70: characters 3-41
		$path = $req->header->url->path;
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:71: lines 71-93
		if (($req->header->method === "GET") && \StringTools::startsWith($path, $this->prefix)) {
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:72: characters 32-36
			$staticPath = $this->root;
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:72: characters 4-79
			$staticPath1 = Path::join(\Array_hx::wrap([
				$staticPath,
				urldecode(HxString::substr($path, strlen($this->prefix))),
			]));
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:82: characters 12-67
			$f = function ($_)  use (&$req, &$_gthis) {
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:82: characters 39-66
				return $_gthis->handler->process($req);
			};
			#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:82: characters 12-67
			return Promise_Impl_::next(Promise_Impl_::next(Future_Impl_::next(FileSystem::exists($staticPath1), function ($exists)  use (&$_gthis, &$staticPath1) {
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:75: characters 36-96
				if (!$exists) {
					#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:75: characters 48-56
					return Promise_Impl_::ofOutcome(Outcome::Failure($_gthis->notFound));
				} else {
					#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:75: characters 62-96
					return FileSystem::isDirectory($staticPath1)->map(new HxClosure(Outcome::class, 'Success'))->gather();
				}
			}), function ($isDir)  use (&$_gthis, &$staticPath1) {
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:76: characters 35-86
				if ($isDir) {
					#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:76: characters 45-53
					return Promise_Impl_::ofOutcome(Outcome::Failure($_gthis->notFound));
				} else {
					#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:76: characters 59-86
					return FileSystem::stat($staticPath1);
				}
			}), function ($stat)  use (&$req, &$_gthis, &$staticPath1) {
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:78: characters 7-47
				$mime1 = Mime::lookup($staticPath1);
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:79: characters 22-32
				$req1 = $req->header;
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:79: characters 40-109
				$d = RealSourceTools::idealize(File::readStream($staticPath1), function ($_1) {
					#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:79: characters 89-108
					return Source_Impl_::$EMPTY;
				});
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:79: characters 117-146
				$d1 = Path::withoutDirectory($staticPath1);
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:79: characters 7-147
				return Promise_Impl_::ofOutcome(Outcome::Success($_gthis->partial($req1, $stat, $d, $mime1, $d1)));
			})->flatMap(function ($o)  use (&$f) {
				#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:82: characters 12-67
				switch ($o->index) {
					case 0:
						#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:82: characters 12-67
						return new SyncFuture(new LazyConst($o->params[0]));
						break;
					case 1:
						#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:82: characters 12-67
						return $f($o->params[0]);
						break;
				}
			})->gather();
		}
		#/Users/ut/haxe/haxe_libraries/tink_http_middleware/0.1.0/github/82c73bb5c4cd37a67f711b71a42e7ec2031d6894/src/tink/http/middleware/Static.hx:95: characters 3-30
		return $this->handler->process($req);
	}
}


Boot::registerClass(StaticHandler::class, 'tink.http.middleware.StaticHandler');
