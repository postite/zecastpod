<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\http\_Handler;

use \tink\http\MiddlewareObject;
use \php\Boot;
use \tink\http\SimpleHandler;
use \tink\http\HandlerObject;

final class Handler_Impl_ {
	/**
	 * @param HandlerObject $this
	 * @param MiddlewareObject $m
	 * 
	 * @return HandlerObject
	 */
	static public function applyMiddleware ($this1, $m) {
		#/Users/ut/haxe/haxe_libraries/tink_http/0.8.2/github/403eb075dff5d7b8ec4a9e08052eb01e1e196722/src/tink/http/Handler.hx:15: characters 5-25
		return $m->apply($this1);
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return HandlerObject
	 */
	static public function ofFunc ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_http/0.8.2/github/403eb075dff5d7b8ec4a9e08052eb01e1e196722/src/tink/http/Handler.hx:20: characters 5-32
		return new SimpleHandler($f);
	}
}


Boot::registerClass(Handler_Impl_::class, 'tink.http._Handler.Handler_Impl_');
