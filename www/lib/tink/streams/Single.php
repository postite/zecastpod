<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\streams;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Lazy\LazyObject;
use \tink\core\_Lazy\LazyConst;

class Single extends StreamBase {
	/**
	 * @var LazyObject
	 */
	public $value;


	/**
	 * @param LazyObject $value
	 * 
	 * @return void
	 */
	public function __construct ($value) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:457: characters 5-23
		parent::__construct();
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:457: characters 5-23
		$this->value = $value;
	}


	/**
	 * @param \Closure $handle
	 * 
	 * @return FutureObject
	 */
	public function forEach ($handle) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:462: lines 462-472
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:463: lines 463-472
		return $handle($this->value->get())->map(function ($step)  use (&$_gthis) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:463: lines 463-472
			switch ($step->index) {
				case 0:
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:465: characters 9-21
					return Conclusion::Halted($_gthis);
					break;
				case 1:
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:467: characters 9-29
					return Conclusion::Halted(Empty_hx::$inst);
					break;
				case 2:
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:469: characters 9-17
					return Conclusion::Depleted();
					break;
				case 3:
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:471: characters 9-25
					return Conclusion::Clogged($step->params[0], $_gthis);
					break;
			}
		})->gather();
	}


	/**
	 * @return FutureObject
	 */
	public function next () {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:460: characters 29-40
		$v = $this->value->get();
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:460: characters 12-56
		return new SyncFuture(new LazyConst(Step::Link($v, Empty_hx::$inst)));
	}
}


Boot::registerClass(Single::class, 'tink.streams.Single');
