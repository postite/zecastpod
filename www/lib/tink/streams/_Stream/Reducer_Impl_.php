<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\streams\_Stream;

use \tink\streams\ReductionStep;
use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Lazy\LazyConst;

final class Reducer_Impl_ {
	/**
	 * @param \Closure $f
	 * 
	 * @return \Closure
	 */
	static public function _new ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:496: character 10
		return $f;
	}


	/**
	 * @param \Closure $this
	 * @param mixed $res
	 * @param mixed $item
	 * 
	 * @return FutureObject
	 */
	static public function apply ($this1, $res, $item) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:500: characters 5-27
		return $this1($res, $item);
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return \Closure
	 */
	static public function ofPlainSync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:512: characters 12-86
		return function ($res, $cur)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:512: characters 51-85
			return new SyncFuture(new LazyConst(ReductionStep::Progress($f($res, $cur))));
		};
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return \Closure
	 */
	static public function ofPromiseBased ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:518: lines 518-521
		return function ($res, $cur)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:518: lines 518-521
			return $f($res, $cur)->map(function ($s) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:518: lines 518-521
				switch ($s->index) {
					case 0:
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:519: characters 24-35
						return ReductionStep::Progress($s->params[0]);
						break;
					case 1:
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:520: characters 24-32
						return ReductionStep::Crash($s->params[0]);
						break;
				}
			})->gather();
		};
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return \Closure
	 */
	static public function ofSafe ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:509: characters 12-26
		return $f;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return \Closure
	 */
	static public function ofSafeSync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:503: characters 12-76
		return function ($res, $cur)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:503: characters 51-75
			return new SyncFuture(new LazyConst($f($res, $cur)));
		};
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return \Closure
	 */
	static public function ofUnknown ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:515: characters 12-26
		return $f;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return \Closure
	 */
	static public function ofUnknownSync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:506: characters 12-76
		return function ($res, $cur)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:506: characters 51-75
			return new SyncFuture(new LazyConst($f($res, $cur)));
		};
	}
}


Boot::registerClass(Reducer_Impl_::class, 'tink.streams._Stream.Reducer_Impl_');
