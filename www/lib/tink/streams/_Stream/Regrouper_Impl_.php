<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\streams\_Stream;

use \php\Boot;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Lazy\LazyConst;
use \php\_Boot\HxAnon;

final class Regrouper_Impl_ {
	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofFunc ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:86: characters 5-22
		return new HxAnon(["apply" => $f]);
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofFuncSync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:89: characters 5-63
		return new HxAnon(["apply" => function ($i, $s)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:89: characters 42-62
			return new SyncFuture(new LazyConst($f($i, $s)));
		}]);
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofIgnorance ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:80: characters 5-47
		return new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:80: characters 35-46
			return $f($i);
		}]);
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofIgnoranceSync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:83: characters 5-60
		return new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:83: characters 42-59
			return new SyncFuture(new LazyConst($f($i)));
		}]);
	}
}


Boot::registerClass(Regrouper_Impl_::class, 'tink.streams._Stream.Regrouper_Impl_');
