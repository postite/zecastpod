<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\streams\_Stream;

use \tink\core\_Promise\Promise_Impl_;
use \php\_Boot\HxClosure;
use \tink\core\Outcome;
use \php\Boot;
use \tink\streams\RegroupResult;
use \tink\core\_Future\SyncFuture;
use \tink\core\_Promise\Recover_Impl_;
use \tink\streams\Empty_hx;
use \tink\core\_Lazy\LazyConst;
use \php\_Boot\HxAnon;

final class Filter_Impl_ {
	/**
	 * @param object $o
	 * 
	 * @return object
	 */
	static public function _new ($o) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:302: character 10
		return $o;
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofAsync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:311: lines 311-313
		return new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:312: characters 46-146
			return $f(($i->arr[0] ?? null))->map(function ($matched)  use (&$i) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:312: characters 77-145
				return RegroupResult::Converted(($matched ? Stream_Impl_::single(($i->arr[0] ?? null)) : Empty_hx::$inst));
			})->gather();
		}]);
	}


	/**
	 * @param \Closure $n
	 * 
	 * @return object
	 */
	static public function ofNext ($n) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:306: lines 306-308
		return new HxAnon(["apply" => function ($i, $_)  use (&$n) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:307: characters 46-164
			$this1 = Promise_Impl_::next($n(($i->arr[0] ?? null)), function ($matched)  use (&$i) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:307: characters 78-146
				return Promise_Impl_::ofOutcome(Outcome::Success(RegroupResult::Converted(($matched ? Stream_Impl_::single(($i->arr[0] ?? null)) : Empty_hx::$inst))));
			});
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:307: characters 46-164
			$f = Recover_Impl_::ofSync(new HxClosure(RegroupResult::class, 'Errored'));
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:307: characters 46-164
			return $this1->flatMap(function ($o)  use (&$f) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:307: characters 46-164
				switch ($o->index) {
					case 0:
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:307: characters 46-164
						return new SyncFuture(new LazyConst($o->params[0]));
						break;
					case 1:
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:307: characters 46-164
						return $f($o->params[0]);
						break;
				}
			})->gather();
		}]);
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofPlain ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:324: lines 324-326
		return new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:325: characters 46-120
			return new SyncFuture(new LazyConst(RegroupResult::Converted(($f(($i->arr[0] ?? null)) ? Stream_Impl_::single(($i->arr[0] ?? null)) : Empty_hx::$inst))));
		}]);
	}


	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofSync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:316: lines 316-321
		return new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:317: lines 317-320
			$v = null;
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:317: characters 65-72
			$_g = $f(($i->arr[0] ?? null));
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:317: characters 65-72
			switch ($_g->index) {
				case 0:
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:317: lines 317-320
					$v = RegroupResult::Converted(($_g->params[0] ? Stream_Impl_::single(($i->arr[0] ?? null)) : Empty_hx::$inst));
					break;
				case 1:
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:317: lines 317-320
					$v = RegroupResult::Errored($_g->params[0]);
					break;
			}
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:317: lines 317-320
			return new SyncFuture(new LazyConst($v));
		}]);
	}
}


Boot::registerClass(Filter_Impl_::class, 'tink.streams._Stream.Filter_Impl_');
