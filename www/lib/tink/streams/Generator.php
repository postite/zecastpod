<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\streams;

use \php\Boot;
use \tink\core\_Future\FutureObject;
use \tink\core\_Future\Future_Impl_;

class Generator extends StreamBase {
	/**
	 * @var FutureObject
	 */
	public $upcoming;


	/**
	 * @param \Closure $step
	 * 
	 * @return Generator
	 */
	static public function stream ($step) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:708: characters 5-51
		return new Generator(Future_Impl_::async($step, true));
	}


	/**
	 * @param FutureObject $upcoming
	 * 
	 * @return void
	 */
	public function __construct ($upcoming) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:680: characters 5-29
		parent::__construct();
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:680: characters 5-29
		$this->upcoming = $upcoming;
	}


	/**
	 * @param \Closure $handler
	 * 
	 * @return FutureObject
	 */
	public function forEach ($handler) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:685: lines 685-705
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:686: lines 686-705
		return Future_Impl_::async(function ($cb)  use (&$_gthis, &$handler) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:687: lines 687-703
			$_gthis->upcoming->handle(function ($e)  use (&$_gthis, &$handler, &$cb) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:687: lines 687-703
				switch ($e->index) {
					case 0:
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:688: characters 22-26
						$then = $e->params[1];
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:689: lines 689-698
						$handler($e->params[0])->handle(function ($s)  use (&$then, &$_gthis, &$handler, &$cb) {
							#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:689: lines 689-698
							switch ($s->index) {
								case 0:
									#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:691: characters 15-31
									$cb(Conclusion::Halted($_gthis));
									break;
								case 1:
									#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:693: characters 15-31
									$cb(Conclusion::Halted($then));
									break;
								case 2:
									#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:695: characters 15-47
									$then->forEach($handler)->handle($cb);
									break;
								case 3:
									#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:697: characters 15-35
									$cb(Conclusion::Clogged($s->params[0], $_gthis));
									break;
							}
						});
						break;
					case 1:
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:700: characters 11-24
						$cb(Conclusion::Failed($e->params[0]));
						break;
					case 2:
						#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:702: characters 11-23
						$cb(Conclusion::Depleted());
						break;
				}
			});
		}, true);
	}


	/**
	 * @return FutureObject
	 */
	public function next () {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:683: characters 5-20
		return $this->upcoming;
	}
}


Boot::registerClass(Generator::class, 'tink.streams.Generator');
