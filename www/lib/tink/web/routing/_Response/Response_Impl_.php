<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\web\routing\_Response;

use \tink\http\ResponseHeaderBase;
use \tink\http\HeaderField;
use \tink\http\_Response\OutgoingResponseData;
use \php\Boot;
use \tink\_Url\Url_Impl_;
use \tink\http\_Response\OutgoingResponse_Impl_;
use \haxe\io\Bytes;
use \tink\http\_Header\HeaderName_Impl_;
use \tink\chunk\ByteChunk;
use \tink\_Chunk\Chunk_Impl_;
use \haxe\io\_BytesData\Container;
use \tink\streams\Single;
use \tink\core\_Lazy\LazyConst;
use \httpstatus\_HttpStatusMessage\HttpStatusMessage_Impl_;

final class Response_Impl_ {
	/**
	 * @param int $code
	 * @param string $contentType
	 * @param Bytes $bytes
	 * 
	 * @return OutgoingResponseData
	 */
	static public function binary ($code = null, $contentType, $bytes) {
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:27: characters 5-59
		return OutgoingResponse_Impl_::blob($code, ByteChunk::of($bytes), $contentType);
	}


	/**
	 * @param int $code
	 * 
	 * @return OutgoingResponseData
	 */
	static public function empty ($code = 200) {
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:31: characters 12-117
		if ($code === null) {
			#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:31: characters 12-117
			$code = 200;
		}
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:31: characters 12-117
		return new OutgoingResponseData(new ResponseHeaderBase($code, HttpStatusMessage_Impl_::fromCode($code), \Array_hx::wrap([new HeaderField("content-length", "0")]), "HTTP/1.1"), new Single(new LazyConst(Chunk_Impl_::$EMPTY)));
	}


	/**
	 * @param Bytes $b
	 * 
	 * @return OutgoingResponseData
	 */
	static public function ofBytes ($b) {
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:14: characters 5-49
		return Response_Impl_::binary(null, "application/octet-stream", $b);
	}


	/**
	 * @param string $h
	 * 
	 * @return OutgoingResponseData
	 */
	static public function ofHtml ($h) {
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:18: characters 5-35
		return Response_Impl_::textual(null, "text/html", $h);
	}


	/**
	 * @param string $s
	 * 
	 * @return OutgoingResponseData
	 */
	static public function ofString ($s) {
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:11: characters 5-36
		return Response_Impl_::textual(null, "text/plain", $s);
	}


	/**
	 * @param object $u
	 * 
	 * @return OutgoingResponseData
	 */
	static public function ofUrl ($u) {
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:22: characters 12-113
		return new OutgoingResponseData(new ResponseHeaderBase(302, HttpStatusMessage_Impl_::fromCode(302), \Array_hx::wrap([new HeaderField(HeaderName_Impl_::ofString("location"), Url_Impl_::toString($u))]), "HTTP/1.1"), new Single(new LazyConst(Chunk_Impl_::$EMPTY)));
	}


	/**
	 * @param int $code
	 * @param string $contentType
	 * @param string $string
	 * 
	 * @return OutgoingResponseData
	 */
	static public function textual ($code = null, $contentType, $string) {
		#/Users/ut/haxe/haxe_libraries/tink_web/0.1.4/github/7c93ab66f476c97e62510c653bb4e58e918e1471/src/tink/web/routing/Response.hx:35: characters 5-61
		return Response_Impl_::binary($code, $contentType, new Bytes(strlen($string), new Container($string)));
	}
}


Boot::registerClass(Response_Impl_::class, 'tink.web.routing._Response.Response_Impl_');
