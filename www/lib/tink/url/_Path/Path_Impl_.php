<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\url\_Path;

use \php\Boot;
use \php\_Boot\HxString;

final class Path_Impl_ {
	/**
	 * @var string
	 */
	static public $root;


	/**
	 * @param string $s
	 * 
	 * @return string
	 */
	static public function _new ($s) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:19: character 10
		return $s;
	}


	/**
	 * @param string $this
	 * 
	 * @return bool
	 */
	static public function get_absolute ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:13: characters 7-35
		return ((0 >= strlen($this1) ? "" : $this1[0])) === "/";
	}


	/**
	 * @param string $this
	 * 
	 * @return bool
	 */
	static public function get_isDir ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:17: characters 14-42
		$index = strlen($this1) - 1;
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:17: characters 7-49
		return ((($index < 0) || ($index >= strlen($this1)) ? "" : $this1[$index])) === "/";
	}


	/**
	 * @param string $this
	 * @param string $that
	 * 
	 * @return string
	 */
	static public function join ($this1, $that) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:24: lines 24-31
		if ($that === "") {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:24: characters 23-32
			return $this1;
		} else if (((0 >= strlen($that) ? "" : $that[0])) === "/") {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:25: characters 31-35
			return $that;
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:27: characters 13-18
			$index = strlen($this1) - 1;
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:27: lines 27-31
			if (((($index < 0) || ($index >= strlen($this1)) ? "" : $this1[$index])) === "/") {
				#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:27: characters 20-52
				return Path_Impl_::ofString(($this1??'null') . ($that??'null'));
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:28: characters 21-42
				$_g = HxString::lastIndexOf($this1, "/");
				#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:28: characters 21-42
				if ($_g === -1) {
					#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:29: characters 20-24
					return $that;
				} else {
					#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:30: characters 11-47
					return Path_Impl_::ofString((HxString::substr($this1, 0, $_g + 1)??'null') . ($that??'null'));
				}
			}
		}
	}


	/**
	 * @param string $s
	 * 
	 * @return string
	 */
	static public function normalize ($s) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:38: characters 9-36
		$s = trim(\StringTools::replace($s, "\\", "/"));
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:39: lines 39-40
		if ($s === ".") {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:40: characters 7-18
			return "./";
		}
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:42: characters 5-74
		$isDir = \StringTools::endsWith($s, "/..") || \StringTools::endsWith($s, "/") || \StringTools::endsWith($s, "/.");
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:44: lines 44-46
		$parts = new \Array_hx();
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:44: lines 44-46
		$isAbsolute = \StringTools::startsWith($s, "/");
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:44: lines 44-46
		$up = 0;
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:48: lines 48-55
		$_g = 0;
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:48: lines 48-55
		$_g1 = \Array_hx::wrap(explode("/", $s));
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:48: lines 48-55
		while ($_g < $_g1->length) {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:48: characters 10-14
			$part = ($_g1->arr[$_g] ?? null);
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:48: lines 48-55
			$_g = $_g + 1;
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:49: characters 14-25
			$_g2 = trim($part);
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:49: characters 14-25
			switch ($_g2) {
				case "":
										break;
				case ".":
										break;
				case "..":
					#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:53: characters 15-26
					if ($parts->length > 0) {
						#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:53: characters 15-26
						$parts->length--;
					}
					#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:53: characters 11-40
					if (array_pop($parts->arr) === null) {
						#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:53: characters 36-40
						$up = $up + 1;
					}
					break;
				default:
					#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:54: characters 17-30
					$parts->arr[$parts->length] = $_g2;
					#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:54: characters 17-30
					++$parts->length;
					break;
			}

		}

		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:57: lines 57-61
		if ($isAbsolute) {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:58: characters 7-24
			$parts->length = array_unshift($parts->arr, "");
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:60: lines 60-61
			$_g11 = 0;
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:60: lines 60-61
			$_g3 = $up;
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:60: lines 60-61
			while ($_g11 < $_g3) {
				#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:60: lines 60-61
				$_g11 = $_g11 + 1;
				#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:61: characters 9-28
				$parts->length = array_unshift($parts->arr, "..");
			}
		}
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:63: lines 63-64
		if ($isDir) {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:64: characters 7-21
			$parts->arr[$parts->length] = "";
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:64: characters 7-21
			++$parts->length;
		}
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:67: characters 5-27
		return $parts->join("/");
	}


	/**
	 * @param string $s
	 * 
	 * @return string
	 */
	static public function ofString ($s) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:34: characters 12-34
		return Path_Impl_::normalize($s);
	}


	/**
	 * @param string $this
	 * 
	 * @return \Array_hx
	 */
	static public function parts ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 12-68
		$_g = new \Array_hx();
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 13-67
		$_g1 = 0;
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 13-67
		$_g2 = \Array_hx::wrap(explode("/", $this1));
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 13-67
		while ($_g1 < $_g2->length) {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 18-19
			$p = ($_g2->arr[$_g1] ?? null);
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 13-67
			$_g1 = $_g1 + 1;
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 40-67
			if ($p !== "") {
				#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 53-67
				$_g->arr[$_g->length] = $p;
				#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 53-67
				++$_g->length;
			}
		}

		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:9: characters 12-68
		return $_g;
	}


	/**
	 * @param string $this
	 * 
	 * @return string
	 */
	static public function toString ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Path.hx:71: characters 5-16
		return $this1;
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$root = "/";
	}
}


Boot::registerClass(Path_Impl_::class, 'tink.url._Path.Path_Impl_');
Boot::registerGetters('tink\\url\\_Path\\Path_Impl_', [
	'isDir' => true,
	'absolute' => true
]);
Path_Impl_::__hx__init();
