<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace tink\url\_Portion;

use \php\Boot;

final class Portion_Impl_ {


	/**
	 * @param string $v
	 * 
	 * @return string
	 */
	static public function _new ($v) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Portion.hx:12: character 17
		return $v;
	}


	/**
	 * @param string $this
	 * 
	 * @return string
	 */
	static public function get_raw ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Portion.hx:10: characters 7-18
		return $this1;
	}


	/**
	 * @param string $s
	 * 
	 * @return string
	 */
	static public function ofString ($s) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Portion.hx:24: characters 12-61
		return ($s === null ? "" : rawurlencode($s));
	}


	/**
	 * @param string $this
	 * 
	 * @return string
	 */
	static public function stringly ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Portion.hx:16: characters 5-22
		return Portion_Impl_::toString($this1);
	}


	/**
	 * @param string $this
	 * 
	 * @return string
	 */
	static public function toString ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Portion.hx:20: lines 20-21
		if ($this1 === null) {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Portion.hx:20: characters 25-29
			return null;
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Portion.hx:21: characters 12-28
			return urldecode($this1);
		}
	}
}


Boot::registerClass(Portion_Impl_::class, 'tink.url._Portion.Portion_Impl_');
Boot::registerGetters('tink\\url\\_Portion\\Portion_Impl_', [
	'raw' => true
]);
