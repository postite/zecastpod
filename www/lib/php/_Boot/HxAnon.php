<?php
/**
 * Generated by Haxe 4.0.0 (git build development @ 3018ab1)
 */

namespace php\_Boot;

use \php\Boot;

/**
 * Anonymous objects implementation
 */
class HxAnon extends \StdClass {
	/**
	 * @param mixed $fields
	 * 
	 * @return void
	 */
	public function __construct ($fields = null) {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:802: lines 802-807
		$_gthis = $this;
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:803: characters 3-10
		;
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:804: lines 804-806
		if ($fields !== null) {
			#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:805: characters 4-84
			foreach ($fields as $name => $value) {
				#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:805: characters 65-69
				$tmp = $_gthis;
				#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:805: characters 49-83
				$tmp->{$name} = $value;
			};
		}
	}


	/**
	 * @param string $name
	 * @param mixed $args
	 * 
	 * @return mixed
	 */
	public function __call ($name, $args) {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:816: characters 29-33
		$tmp = $this;
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:816: characters 35-39
		$tmp1 = $name;
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:816: characters 3-41
		$method = $tmp->{$tmp1};
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:817: characters 3-25
		;
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:818: characters 3-36
		return $method(...$args);
	}


	/**
	 * @param string $name
	 * 
	 * @return mixed
	 */
	public function __get ($name) {
		#/Users/ut/haxe/versions/4.0.0-preview.3/std/php/Boot.hx:811: characters 3-14
		return null;
	}
}


Boot::registerClass(HxAnon::class, 'php._Boot.HxAnon');
